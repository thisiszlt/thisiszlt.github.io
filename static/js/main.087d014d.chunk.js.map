{"version":3,"sources":["SettingPage.js","FilePage.js","Scanner.js","Layout.js","serviceWorker.js","index.js"],"names":["SubMenu","Menu","CutOff","react_default","a","createElement","divider","style","margin","AttributeStyle","padding","SettingPage","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleCollapsed","setState","collapsed","state","onResolutionChange","e","value","target","onScanSettinfChange","onChangeRegionMode","showMenu","content","selectedTags","Fragment","className","page_header","onBack","onBackClick","title","menu","mode","theme","inlineCollapsed","key","icon","type","Item","es_radio","Group","paddingLeft","onChange","ItemGroup","left","es_switch","float","right","card","es_button","size","onClick","React","Component","FilePage","showFile","console","log","Canvas","position","top","background","isDraw","canvas","createRef","point","x1","split","y1","x2","y2","x3","y3","x4","y4","leftMin","Math","min","topMin","max","_x1","_x2","_x3","_x4","_y1","_y2","_y3","_y4","current","getContext","ctx","fillStyle","clearRect","width","height","beginPath","moveTo","lineTo","fill","rightMax","bottomMax","cvsStyle","ref","Dynamsoft","window","scanner","Scanner","_this2","numbers","resultsInfo","isOpen","resultsPoint","camera","_this3","BarcodeScanner","createInstance","intervalTime","UIElement","document","getElementById","videoSettings","video","ideal","facingMode","onFrameRead","results","resultPointsPerFrame","i","length","result","push","LocalizationResult","ResultPoints","arrDiffCodeInfo","onUnduplicatedRead","txt","then","s","_isOpen","show","getAllCameras","infos","setCurrentCamera","deviceId","close","showScanner","_this4","allCanvas","map","eachResult","index","Scanner_Canvas","onSwitchCamera","bind","zIndex","react_addons_css_transition_group_default","transitionName","transitionLeave","transitionAppear","transitionEnter","transitionAppearTimeout","transitionLeaveTimeout","transitionEnterTimeout","spin","tip","indicator","fontSize","id","playsInline","Layout_Result","RegionBtn","handleRegion","isFullRegion","color","ScannerArea","timeout","Body","src_Scanner","href","src","alt","clicks","Head","isShowSettingPage","isShowFilePage","isFullScreen","exitFullscreen","documentElement","requestFullscreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen","event","preventDefault","Date","getTime","clearTimeout","setTimeout","switchFullScreen","src_SettingPage_0","handleShowSettingPage","src_FilePage_0","handleShowFilePage","fullSceenClickHandler","EachResult","kUtil","copyToClipBoard","config","message","innerHeight","duration","open","possibleLink","startsWith","indexOf","isLink","format","textDecoration","copyScannerResult","count","Result","resultItems","slice","ri","Layout_EachResult","BarcodeText","BarcodeFormatString","Layout","_this5","isShow","Layout_Body","Layout_Head","onSwitchPage","handleShow","Boolean","location","hostname","match","ReactDOM","render","src_Layout_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.087d014d.chunk.js","sourcesContent":["import React from 'react';\r\nimport 'antd/dist/antd.css'\r\nimport { PageHeader,Menu, Icon, Button,Radio, Card,Tag,Layout,Switch,Divider } from 'antd';\r\nimport './SettingPage.css';\r\nimport './Layout.css'\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nfunction CutOff(){\r\n    return(\r\n        <Divider style={{margin:\"10px 0\"}}/>\r\n    )\r\n}\r\n\r\nconst AttributeStyle = {\r\n    padding:\"5px\"\r\n};\r\n\r\nclass SettingPage extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            showMenu:true,\r\n            content:null,\r\n            collapsed: false,\r\n            value: 1,\r\n            selectedTags: [],\r\n        }\r\n    }\r\n\r\n\r\n    toggleCollapsed = () => {\r\n        this.setState({\r\n            collapsed: !this.state.collapsed,\r\n        });\r\n    };\r\n\r\n    onResolutionChange = e =>{\r\n        this.setState({\r\n            value:e.target.value,\r\n        });\r\n    }\r\n\r\n    onScanSettinfChange = e =>{\r\n        this.setState({\r\n            value:e.target.value,\r\n        });\r\n    }\r\n\r\n    onChangeRegionMode = ()=>{}\r\n\r\n    \r\n\r\n    onSettingClick(){\r\n        this.setState({\r\n            showMenu:!this.state.showMenu,\r\n        });\r\n        //console.log(this.state.showMenu);\r\n        \r\n    }\r\n\r\n    \r\n    render(){\r\n        return(\r\n            <>\r\n                {/* hide the setting button if the  setting page is shown */}\r\n                {/* <div>\r\n                    {\r\n                        !this.state.showMenu && \r\n                        <div className=\"settingBtn-container\">\r\n                            <Icon onClick={this.onSettingClick.bind(this)}  type=\"setting\" style={{fontSize:\"50px\",color:\"wheat\"}}></Icon>\r\n                        </div>\r\n                    }\r\n                </div> */}\r\n                \r\n                {/* show the setting page */}\r\n                \r\n                {\r\n                    !this.state.showMenu ? null:\r\n                    <div className=\"setting-container\">\r\n                        <PageHeader onBack={this.props.onBackClick} title=\"Settings\"  />\r\n                        <Menu\r\n                            //defaultSelectedKeys={['video']}\r\n                            //defaultOpenKeys={['Read Full Region']}\r\n                            mode=\"inline\"\r\n                            theme=\"light\"\r\n                            inlineCollapsed={this.state.collapsed}\r\n                            \r\n                        >\r\n                            {/* Video Source */}\r\n                            <SubMenu\r\n                                key=\"video\"\r\n                                title={\r\n                                <span>\r\n                                    <Icon type=\"camera\" />\r\n                                    <span>Video Source</span>\r\n                                </span>\r\n                                }\r\n                            >\r\n                                <Menu.Item key=\"camera1\">Camera 1</Menu.Item>\r\n                                <Menu.Item key=\"camera2\">Camera 2</Menu.Item>\r\n                            </SubMenu>\r\n\r\n                            <CutOff />\r\n\r\n                            {/* Video Resolution */}\r\n                            <SubMenu\r\n                                key=\"resolution\"\r\n                                title={\r\n                                <span>\r\n                                    <Icon type=\"eye\"/>\r\n                                    <span>Video Resolution</span>\r\n                                </span>\r\n                                }\r\n                            >\r\n                                <Radio.Group style={{paddingLeft:'20px'}} onChange={this.onResolutionChange} value={this.state.value}>\r\n                                    <Radio style={AttributeStyle} value={1}>3080*2160</Radio>\r\n                                    <Radio style={AttributeStyle} value={2}>2560*1440</Radio>\r\n                                    <Radio style={AttributeStyle} value={3}>1929*1080</Radio>\r\n                                    <Radio style={AttributeStyle} value={4}>1600*1200</Radio>\r\n                                    <Radio style={AttributeStyle} value={5}>1280*720</Radio>\r\n                                    <Radio style={AttributeStyle} value={6}>800*600</Radio>\r\n                                    <Radio style={AttributeStyle} value={7}>640*480</Radio>\r\n                                    <Radio style={AttributeStyle} value={8}>640*360</Radio>\r\n                                </Radio.Group>\r\n                            </SubMenu>\r\n\r\n                            <CutOff />\r\n\r\n                            {/* //Barcode Format */}\r\n                            <Menu.ItemGroup key=\"Barcode Format\" title=\"Barcode Format\" icon=\"barcode\">\r\n                                <Menu.Item key=\"1D\" style={{left:\"5px\"}}><h5>1D</h5></Menu.Item>\r\n                                <Menu.Item key=\"PDF417\" style={{left:\"5px\"}}><h5>PDF417</h5></Menu.Item>\r\n                                <Menu.Item key=\"QR Code\" style={{left:\"5px\"}}><h5>QR Code</h5></Menu.Item>\r\n                                <Menu.Item key=\"Data Matrix\" style={{left:\"5px\"}}><h5>Data Matrix</h5></Menu.Item>\r\n                                <Menu.Item key=\"Actec Code\" style={{left:\"5px\"}}><h5>Actec Code</h5></Menu.Item>\r\n                            </Menu.ItemGroup>\r\n                            \r\n                            <CutOff />\r\n\r\n                            {/* //Scan Settings */}\r\n                            <SubMenu\r\n                                key=\"scan\"\r\n                                title={\r\n                                <span>\r\n                                    <Icon type=\"setting\"></Icon>\r\n                                    <span>Scan Settings</span>\r\n                                </span>\r\n                                }\r\n                            >\r\n                                <Radio.Group style={{paddingLeft:'20px'}} onChange={this.onScanSettinfChange} value={this.state.value}>\r\n                                    <Radio style={AttributeStyle} value=\"Fast\">Fast</Radio>\r\n                                    <Radio style={AttributeStyle} value=\"Most Accurate\">Most Accurate</Radio>\r\n                                </Radio.Group>\r\n                                \r\n                            </SubMenu>\r\n\r\n                            <CutOff />\r\n\r\n                            {/* //Read Full Region */}\r\n                            <SubMenu \r\n                                key=\"region\" \r\n                                title={\r\n                                <span>\r\n                                    <Icon type=\"eye\"></Icon>\r\n                                    <span>Read Full Region</span>\r\n                                </span>\r\n                                }\r\n                            >\r\n                                <div>\r\n                                    <Switch onChange={this.onChangeRegionMode} \r\n                                        style={{float:\"right\",right:\"10px\"}}/> \r\n                                    </div>\r\n                            </SubMenu>\r\n                            \r\n                            <CutOff />\r\n\r\n                            {/* About */}\r\n                            <SubMenu\r\n                                key=\"about\"\r\n                                title={\r\n                                <span>\r\n                                    <Icon type=\"bulb\"></Icon>\r\n                                    <span>About Dynamsoft</span>\r\n                                </span>\r\n                                }\r\n                            >\r\n                                <div>\r\n                                    <Card title=\"About\">\r\n                                        <p>\r\n                                        Founded in Sep 2003 with the aim of being the dynamic center of software developers, \r\n                                        Dynamsoft provides enterprise-class document capture and image processing software development kits (SDK),\r\n                                        with numerous generations for each product. Today many Fortune 500 Companies including HP, IBM, Intel, and Siemens trust Dynamsoft solutions.\r\n                                        </p>\r\n                                    </Card>\r\n                                </div>\r\n                            </SubMenu>\r\n                            \r\n                            <CutOff />\r\n                            {/* Clear Cache */}\r\n                            <div className=\"clear-cache\">\r\n                                <Button type=\"primary\" size=\"large\" onClick={()=>null}>\r\n                                    Clear Cache\r\n                                </Button>\r\n                            </div>\r\n                        </Menu>\r\n                    </div>\r\n                }\r\n                \r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default SettingPage;","import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { PageHeader,Icon} from 'antd';\r\nimport './FilePage.css';\r\nimport './Layout.css'\r\n\r\n\r\nclass FilePage extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            showFile:true,\r\n        }\r\n    }\r\n\r\n    onAddFileClick(){\r\n        this.setState({\r\n            showFile:!this.state.showFile,\r\n        })\r\n        console.log(this.state.showFile);\r\n    }\r\n    render(){\r\n        return(\r\n            <>\r\n                {/* hide the add button if the file page is shown */}\r\n                {/* <div>\r\n                    {\r\n                        !this.state.showFile&&\r\n                        <div className=\"selImgBtn-container\">\r\n                            <Icon onClick={this.onAddFileClick.bind(this)} type=\"plus\" style={{fontSize:\"50px\",color:\"wheat\"}}></Icon>\r\n                        </div>\r\n                    }\r\n                </div> */}\r\n                \r\n                {/* show the file page */}\r\n                {\r\n                    !this.state.showFile?null:\r\n                    <div className=\"file-container\">\r\n                        <PageHeader onBack={this.props.onBackClick} title=\"Files\"  />\r\n                    </div>\r\n                }\r\n            </>\r\n            \r\n        )\r\n    }\r\n}\r\nexport default FilePage;","import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport {Button,Icon,Spin} from 'antd';\r\nimport {Result} from './Layout';\r\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\r\nimport './Layout.css'\r\n\r\n\r\nclass Canvas extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state=({\r\n            style:{\r\n                position:\"absolute\",\r\n                left:0,\r\n                top:0,\r\n                background:\"red\",\r\n            },\r\n            isDraw:false\r\n        })\r\n        this.canvas = React.createRef();\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        let point = this.props.point;    \r\n        let x1 = point[0].split(',')[0];\r\n        let y1 = point[0].split(',')[1];\r\n        let x2 = point[1].split(',')[0];\r\n        let y2 = point[1].split(',')[1];\r\n        let x3 = point[2].split(',')[0];\r\n        let y3 = point[2].split(',')[1];\r\n        let x4 = point[3].split(',')[0];\r\n        let y4 = point[3].split(',')[1];\r\n\r\n        let leftMin = Math.min(x1, x2, x3, x4);\r\n        let rightMax = Math.max(x1, x2, x3, x4);\r\n        let topMin = Math.min(y1, y2, y3, y4);\r\n        let bottomMax = Math.max(y1, y2, y3, y4);    \r\n        \r\n        let _x1 = x1 - leftMin;\r\n        let _x2 = x2 - leftMin;\r\n        let _x3 = x3 - leftMin;\r\n        let _x4 = x4 - leftMin;\r\n        let _y1 = y1 - topMin;\r\n        let _y2 = y2 - topMin;\r\n        let _y3 = y3 - topMin;\r\n        let _y4 = y4 - topMin;\r\n\r\n\r\n        var canvas = this.canvas.current;\r\n        //console.log(_x1,_y1,_x2,_y2,_x3,_y3,_x4,_y4);\r\n        if(canvas.getContext){\r\n            //debugger;\r\n            let ctx = canvas.getContext(\"2d\");\r\n            ctx.fillStyle = 'rgba(254,180,32,0.5)';\r\n            ctx.clearRect(0,0,canvas.width,canvas.height);\r\n            ctx.beginPath();\r\n            ctx.moveTo(_x1, _y1);\r\n            ctx.lineTo(_x2, _y2);\r\n            ctx.lineTo(_x3, _y3);\r\n            ctx.lineTo(_x4, _y4);\r\n            ctx.fill();\r\n        }\r\n        \r\n    }\r\n\r\n    render(){\r\n        let point = this.props.point;    \r\n        let x1 = point[0].split(',')[0];\r\n        let y1 = point[0].split(',')[1];\r\n        let x2 = point[1].split(',')[0];\r\n        let y2 = point[1].split(',')[1];\r\n        let x3 = point[2].split(',')[0];\r\n        let y3 = point[2].split(',')[1];\r\n        let x4 = point[3].split(',')[0];\r\n        let y4 = point[3].split(',')[1];\r\n\r\n        let leftMin = Math.min(x1, x2, x3, x4);\r\n        let rightMax = Math.max(x1, x2, x3, x4);\r\n        let topMin = Math.min(y1, y2, y3, y4);\r\n        let bottomMax = Math.max(y1, y2, y3, y4);    \r\n        let cvsStyle={\r\n            position:\"absolute\",\r\n            left:leftMin+\"px\",\r\n            top:topMin+\"px\",\r\n            //background:\"#80008021\",\r\n        }\r\n        return(\r\n            <>\r\n            {\r\n                <canvas\r\n                ref={this.canvas}\r\n                width={rightMax-leftMin} height={bottomMax-topMin} style={cvsStyle}>\r\n                </canvas>\r\n            }\r\n            </>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nconst Dynamsoft = window.Dynamsoft;\r\nlet scanner = null;\r\nclass Scanner extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state=({\r\n            numbers:[],\r\n            resultsInfo:[],\r\n            isOpen:false,\r\n            resultsPoint:[],\r\n            camera:0\r\n        })\r\n    }\r\n\r\n    showScanner(){\r\n        // var fullWidth = $(\".wrap-container\").width();\r\n        // var fullHeight = $(\".wrap-container\").height();\r\n        // var frameWidth= $(\".frame\").width();\r\n        // var frameHeight = $(\".frame\").height();\r\n    \r\n    \r\n        // function switchScannerArea(scanner,isFullRegion){\r\n        //     let settings = scanner.getRuntimeSettings();\r\n        //     console.log(settings.region);\r\n        //     if(isFullRegion===false){\r\n        //         settings.region.left = ((fullWidth-frameWidth)/2)/fullWidth*100;\r\n        //         settings.region.top = ((fullHeight-frameHeight)/2)/fullHeight*100;\r\n        //         settings.region.right = (frameWidth + (fullWidth-frameWidth)/2)/fullWidth*100;\r\n        //         settings.region.bottom = (frameHeight + (fullHeight-frameHeight)/2)/fullHeight*100;\r\n        //         settings.region.measuredByPercentage = 1; // 1 means true\r\n        //         console.log(settings.region.left,settings.region.top);\r\n        //     }\r\n        //     else{\r\n        //         settings.region.left = 0;\r\n        //         settings.region.top = 0;\r\n        //         settings.region.right = 0;\r\n        //         settings.region.bottom = 0;\r\n        //         settings.region.measuredByPercentage = 1; // 1 means true\r\n        //     }\r\n        //     scanner.updateRuntimeSettings(settings);\r\n        // }\r\n    \r\n        \r\n        Dynamsoft.BarcodeScanner.createInstance({\r\n            intervalTime:200,\r\n            UIElement:document.getElementById('scanner'),\r\n            videoSettings: { video: { width: { ideal: 1280 }, height: {ideal: 720 }, facingMode: { ideal: 'environment' } } },\r\n            onFrameRead: results => {\r\n                let resultPointsPerFrame=[];\r\n                for (let i = 0; i < results.length; i++){\r\n                    let result = results[i];\r\n                    resultPointsPerFrame.push(result.LocalizationResult.ResultPoints);\r\n                }\r\n\r\n                let resultsInfo = scanner.arrDiffCodeInfo;\r\n                this.setState({\r\n                    resultsInfo:resultsInfo,\r\n                    resultsPoint:resultPointsPerFrame,\r\n                });\r\n                \r\n                console.log(this.state.resultsInfo);\r\n            },\r\n            onUnduplicatedRead: (txt, result) => {\r\n                console.log(result,typeof result);\r\n            }\r\n        }).then(s => {\r\n            scanner = s;\r\n        }).then(()=>{\r\n            if(scanner._isOpen===false){\r\n                console.log(\"open!\");\r\n                scanner.show().then(()=>\r\n                    scanner.getAllCameras().then(infos=>{\r\n                        scanner.setCurrentCamera(infos[this.state.camera].deviceId);\r\n                    })\r\n                )\r\n            }\r\n            else{\r\n                console.log(\"close!\");\r\n                scanner.show().then(()=>scanner.close());\r\n            }\r\n        }).then(()=>{\r\n            this.setState({\r\n                isOpen:!this.state.isOpen\r\n            })\r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.showScanner();\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.showScanner();\r\n    }\r\n\r\n    onSwitchCamera(){\r\n        if(this.state.camera===0){\r\n            this.setState({\r\n                camera:1\r\n            })\r\n        }\r\n        else{\r\n            this.setState({\r\n                camera:0\r\n            })\r\n        }\r\n        scanner.getAllCameras().then(infos=>{\r\n            scanner.setCurrentCamera(infos[this.state.camera].deviceId);\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const allCanvas = this.state.resultsPoint.map((eachResult,index)=>\r\n            <Canvas key={index} point={eachResult}></Canvas>\r\n        );\r\n        return(\r\n            <>\r\n            <button onClick={this.onSwitchCamera.bind(this)} style={{position:\"absolute\",top:\"60px\",left:0,zIndex:999}}>切换相机</button>\r\n            <style type=\"text/css\">\r\n                {`\r\n                .waiting{\r\n                    position:absolute;\r\n                    left:50%;\r\n                    top:50%;\r\n                    transform:translate(-50%);\r\n                    color:#FE8E14;\r\n                    transition: opacity 1000ms ease-in;\r\n                }\r\n\r\n                .fade-enter.fade-enter-active {\r\n                    opacity:1;\r\n                    transition: opacity 1000ms ease-in;\r\n                }\r\n\r\n                .fade-enter{\r\n                    opacity:0;\r\n                }\r\n\r\n                .fade-leave{\r\n                    opacity: 1; \r\n                }\r\n\r\n                .fade-leave.fade-leave-active{\r\n                    opacity:0;\r\n                    transition: opacity 3000ms ease-in;\r\n                }\r\n                \r\n                .fade-appear{\r\n                    opacity:0;\r\n                }\r\n\r\n                .fade-appear.fade-appear-active {\r\n                    opacity: 1;\r\n                    transition: opacity 2000ms ease-in;\r\n                }\r\n                `}\r\n            </style>\r\n            <ReactCSSTransitionGroup\r\n                transitionName=\"fade\"\r\n                transitionLeave={true}\r\n                transitionAppear={false}\r\n                transitionEnter={false}\r\n                transitionAppearTimeout={500}\r\n                transitionLeaveTimeout={3500}\r\n                transitionEnterTimeout={2500}\r\n            >\r\n                {\r\n                    !this.state.isOpen&&\r\n                    <Spin \r\n                    className=\"waiting\" \r\n                    tip=\"Accessing Camera list...\" \r\n                    indicator={<Icon type=\"smile\" spin style={{ fontSize: \"3rem\" ,}}></Icon>}>\r\n                    </Spin>    \r\n                }\r\n            </ReactCSSTransitionGroup>           \r\n            \r\n            <div id='scanner' style={{position:\"absolute\"}}>\r\n                <video className='dbrScanner-video' playsInline={true}></video>\r\n                {\r\n                    this.state.resultsPoint.length&&\r\n                    <>{allCanvas}</>\r\n                }\r\n            </div>\r\n            <Result resultsInfo={this.state.resultsInfo}></Result>\r\n            \r\n            {/* <div style={{\"position\":\"absolute\",bottom:\"130px\"}}>\r\n                <Button type=\"primary\" onClick={this.showScanner.bind(this)}>{this.state.isOpen?\"close\":\"open\"} scanner</Button>\r\n            </div> */}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Scanner;","import React from 'react';\r\nimport \"./Layout.css\";\r\nimport {Button,Icon,notification,message} from 'antd';\r\nimport SettingPage from './SettingPage';\r\nimport FilePage from './FilePage';\r\nimport Scanner from \"./Scanner\";\r\n\r\nfunction RegionBtn(props){\r\n    return(\r\n        <label className=\"region\" onClick={props.handleRegion}>\r\n            <Icon type={props.isFullRegion?\"fullscreen-exit\":\"fullscreen\"} style={{fontSize:\"2rem\",color:\"#FE8E14\"}}></Icon>\r\n        </label>\r\n    )\r\n}\r\n\r\nfunction ScannerArea(){\r\n    return(\r\n        <div className=\"scanner-container\">\r\n            <div className=\"frame\">\r\n                <label className=\"flashlight\">\r\n                    <Icon type=\"funnel-plot\" style={{fontSize:\"2rem\",color:\"#FE8E14\"}}></Icon>\r\n                </label>\r\n            </div>\r\n            <div className=\"tip-info\">\r\n                <p>Put the code in the box and scan it automatically.</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nclass Body extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state=({\r\n            isFullRegion:false,\r\n        })\r\n    }\r\n    handleRegion(){\r\n        this.setState({\r\n            isFullRegion:!this.state.isFullRegion,\r\n        })\r\n    }\r\n    render(){\r\n        return (\r\n            <div className=\"home-screen\">\r\n                <Scanner></Scanner>\r\n                {\r\n                    !this.state.isFullRegion&&\r\n                    <ScannerArea></ScannerArea>\r\n                }\r\n                <div className=\"dynam-info\">\r\n                    {/* <p>Dynamsoft DBR</p> */}\r\n                    <a href=\"https://www.dynamsoft.com\" ><img src=\"img/logo-dynamsoft-blackBg-190x47.png\" alt=\"logo\" style={{width:\"50%\"}}></img></a>\r\n                </div>\r\n                \r\n                <RegionBtn handleRegion={this.handleRegion.bind(this)} isFullRegion={this.state.isFullRegion}></RegionBtn>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet clicks = [];\r\nlet timeout;\r\n\r\nclass Head extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state=({\r\n            isShowSettingPage:false,\r\n            isShowFilePage:false,\r\n            isFullScreen:false,\r\n        })\r\n    }\r\n\r\n    handleShowSettingPage(){\r\n        this.setState({\r\n            isShowSettingPage:!this.state.isShowSettingPage,\r\n        });\r\n    }\r\n\r\n    handleShowFilePage(){\r\n        this.setState({\r\n            isShowFilePage:!this.state.isShowFilePage,\r\n        });\r\n    }\r\n\r\n    switchFullScreen(){\r\n        //console.log(\"fullscreen suceess!\");\r\n        if(!this.state.isFullScreen){\r\n            if(document.documentElement.requestFullscreen){\r\n                document.documentElement.requestFullscreen();\r\n            }\r\n            else if(document.documentElement.webkitRequestFullScreen){\r\n                document.documentElement.webkitRequestFullScreen();\r\n            }\r\n            else if(document.documentElement.mozRequestFullScreen){\r\n                document.documentElement.mozRequestFullScreen();\r\n            }\r\n            else{\r\n                document.documentElement.msRequestFullscreen();\r\n            }\r\n            //document.documentElement.requestFullscreen(); \r\n        }\r\n            \r\n        else\r\n            document.exitFullscreen();\r\n        this.setState({\r\n            isFullScreen:!this.state.isFullScreen,\r\n        })       \r\n    }\r\n\r\n    fullSceenClickHandler(event){\r\n        event.preventDefault();\r\n        clicks.push(new Date().getTime());\r\n        window.clearTimeout(timeout);\r\n        timeout = window.setTimeout(()=>{\r\n            if (clicks.length > 1 && clicks[clicks.length - 1] - clicks[clicks.length - 2] < 250){\r\n                this.switchFullScreen();\r\n            }\r\n        },250);\r\n    }   \r\n\r\n    render(){\r\n        if(this.state.isShowSettingPage){\r\n            return(\r\n                <SettingPage onBackClick={this.handleShowSettingPage.bind(this)}></SettingPage>\r\n            )\r\n        }\r\n\r\n        if(this.state.isShowFilePage){\r\n            return(\r\n                <FilePage onBackClick={this.handleShowFilePage.bind(this)}></FilePage>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <div className=\"header-bar\">\r\n                    <div className=\"settingBtn-container\" >\r\n                        <Icon type=\"setting\" style={{fontSize:\"2.5rem\",color:\"#FE8E14\"}} onClick={this.handleShowSettingPage.bind(this)} ></Icon>\r\n                    </div>\r\n                    <div className=\"double-click\" >\r\n                        <label onClick={this.fullSceenClickHandler.bind(this)}>双击{this.state.isFullScreen&&\"退出\"}全屏</label>\r\n                    </div>\r\n                    <div className=\"selImgBtn-container\">\r\n                        <Icon type=\"plus\" style={{fontSize:\"2.5rem\",color:\"#FE8E14\"}} onClick={this.handleShowFilePage.bind(this)}></Icon>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    \r\n}\r\n\r\n\r\nclass EachResult extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    copyScannerResult(){\r\n        const kUtil=window.kUtil;\r\n        kUtil.copyToClipBoard(this.props.content);\r\n        // message.config({\r\n        //     top:window.innerHeight-180,\r\n        //     maxCount:3,\r\n        //     \r\n        // })\r\n        //message.success(\"copy successfully!\");\r\n        var config={};\r\n        config.content=\"copy successfully!\";\r\n        config.icon=<Icon type=\"smile\" style={{color:\"#FE8E14\"}}></Icon>;\r\n        message.config({\r\n            top:window.innerHeight-180,\r\n            duration:1.5,\r\n        })\r\n        message.open(config);\r\n    }\r\n\r\n    render(){\r\n        const copyNotice = () => {\r\n            this.copyScannerResult();\r\n            notification.open({\r\n                message: 'Notice:',\r\n                placement:\"bottomLeft\",\r\n                duration:1.5,\r\n                description:\r\n                '复制成功!',\r\n                icon:<Icon type=\"smile\" style={{color:\"#FE8E14\"}}></Icon>,\r\n                style:{\r\n                    width:200,\r\n                    marginLeft:335-200\r\n                }\r\n            });\r\n        };\r\n\r\n        let txt = this.props.content;\r\n        let possibleLink = txt;\r\n        if (!txt.startsWith('http') && (txt.startsWith('www') || -1 !== txt.indexOf('.com') ||\r\n            -1 !== txt.indexOf('.net') || -1 !== txt.indexOf('.org') || -1 !== txt.indexOf('.edu'))) {\r\n            possibleLink = 'http://' + txt;\r\n        }\r\n        let isLink = possibleLink.startsWith('http');\r\n        return(\r\n            <div className=\"result-content\">\r\n                <div>\r\n                    <><span style={{color:\"#FE8E14\"}}>{this.props.format}: </span></>\r\n                    {\r\n                        isLink?\r\n                        <a href={possibleLink} target={\"_blank\"} style={{textDecoration:\"underline\"}} >{this.props.content}</a>\r\n                        : <span onClick={this.copyScannerResult.bind(this)}>{this.props.content}</span> \r\n                    }\r\n                    <><span style={{color:\"#FE8E14\"}}> x {this.props.count}</span></>\r\n                    {/* <Button type=\"link\" icon=\"copy\" size=\"small\" style={{float:\"right\"}}  onClick={this.copyScannerResult.bind(this)}></Button> */}\r\n                </div>\r\n            </div>\r\n            )\r\n        }\r\n}\r\n\r\n\r\nclass Result extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    \r\n    render(){\r\n        const resultItems = this.props.resultsInfo.slice(-3).map((ri,index)=>\r\n            <EachResult key={index} content = {ri.result.BarcodeText} count={ri.count} format={ri.result.BarcodeFormatString}></EachResult>\r\n        );\r\n        return(\r\n            <div className=\"result-container\">\r\n                {resultItems}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Layout extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state=({\r\n            isOpen:false,\r\n            isShow:true,\r\n        })\r\n    }\r\n\r\n    handleShow(){\r\n        this.setState({\r\n            isShow:!this.state.isShow,\r\n        });\r\n        console.log(this.state.isShow);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"wrap-container\">\r\n                {\r\n                    this.state.isShow&&<Body></Body>\r\n                }\r\n                <Head onSwitchPage={this.handleShow.bind(this)}></Head>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Layout;\r\nexport {Result};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Layout from './Layout'\nimport * as serviceWorker from './serviceWorker';\n\n\n// class FullPage extends React.Component{\n//     constructor(props){\n//         super(props);\n//         this.state=({\n            \n//         })\n//     }\n\n//     render(){\n//         return(\n//             <>\n//                 <Layout></Layout>\n//             </>\n//         )\n//     }\n// }\n\nReactDOM.render(<Layout/>,document.getElementById('root'));\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}