{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.fea065df607d35e6f58b.hot-update.js","sources":["webpack:///./pages/components/Layout.js"],"sourcesContent":["import React from 'react';\r\nimport \"../../static/css/Layout.css\";\r\nimport {Icon} from 'antd';\r\nimport SettingPage from './SettingPage';\r\nimport FilePage from './FilePage';\r\nimport Scanner from \"./Scanner\";\r\n\r\nfunction RegionBtn(props){\r\n    return(\r\n        <label className=\"region\" onClick={props.handleRegion}>\r\n            <Icon type={props.isFullRegion?\"fullscreen-exit\":\"fullscreen\"} style={{fontSize:\"2rem\",color:\"#FE8E14\"}}></Icon>\r\n        </label>\r\n    )\r\n}\r\n\r\nfunction ScannerArea(props){\r\n    return(\r\n        <div className=\"scanner-container\">\r\n            <div className=\"frame\" style={{width:props.region+\"%\",height:props.region+\"%\",maxWidth:\"250px\",maxHeight:\"250px\"}}>\r\n                <label className=\"flashlight\">\r\n                    <Icon type=\"funnel-plot\" style={{fontSize:\"2rem\",color:\"#FE8E14\"}}></Icon>\r\n                </label>\r\n            </div>\r\n            <div className=\"tip-info\">\r\n                <p>Put the code in the box and scan it automatically.</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nclass Body extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state=({\r\n            isFullRegion:false,\r\n        })\r\n    }\r\n\r\n    handleRegion(){\r\n        this.setState({\r\n            isFullRegion:!this.state.isFullRegion,\r\n        })\r\n    }\r\n\r\n\r\n    render(){\r\n        var regionSize = 60;\r\n        return (\r\n            <div className=\"home-screen\">\r\n                <Scanner region={regionSize} isFullRegion={this.state.isFullRegion}></Scanner>\r\n                {\r\n                    !this.state.isFullRegion&&\r\n                    <ScannerArea region={regionSize}></ScannerArea>\r\n                }\r\n                <div className=\"dynam-info\">\r\n                    {/* <p>Dynamsoft DBR</p> */}\r\n                    <a href=\"https://www.dynamsoft.com\" ><img src=\"../static/img/logo-dynamsoft-blackBg-190x47.png\" alt=\"logo\"></img></a>\r\n                </div>\r\n                \r\n                <RegionBtn handleRegion={this.handleRegion.bind(this)} isFullRegion={this.state.isFullRegion}></RegionBtn>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet clicks = [];\r\nlet timeout;\r\n\r\nclass Main extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state=({\r\n            isShowSettingPage:false,\r\n            isShowFilePage:false,\r\n            isFullScreen:false,\r\n            isFullRegion:false,\r\n            settingDisplayStyle:{display:\"none\"},\r\n            fileDisplayStyle:{display:\"none\"}\r\n        })\r\n    }\r\n\r\n    handleRegion(){\r\n        this.setState({\r\n            isFullRegion:!this.state.isFullRegion,\r\n        })\r\n    }\r\n\r\n    handleShowSettingPage(){\r\n        this.setState({\r\n            isShowSettingPage:!this.state.isShowSettingPage,\r\n            settingDisplayStyle:this.state.settingDisplayStyle.display===\"none\"?{display:\"block\"}:{display:\"none\"}\r\n        });\r\n    }\r\n\r\n    handleShowFilePage(){\r\n        this.setState({\r\n            isShowFilePage:!this.state.isShowFilePage,\r\n            fileDisplayStyle:this.state.fileDisplayStyle.display===\"none\"?{display:\"block\"}:{display:\"none\"}\r\n        });\r\n    }\r\n\r\n    switchFullScreen(){\r\n        if(!this.state.isFullScreen){\r\n            if(document.documentElement.requestFullscreen){\r\n                document.documentElement.requestFullscreen();\r\n            }\r\n            else if(document.documentElement.webkitRequestFullScreen){\r\n                document.documentElement.webkitRequestFullScreen();\r\n            }\r\n            else if(document.documentElement.mozRequestFullScreen){\r\n                document.documentElement.mozRequestFullScreen();\r\n            }\r\n            else{\r\n                document.documentElement.msRequestFullscreen();\r\n            }\r\n            //document.documentElement.requestFullscreen(); \r\n        }\r\n            \r\n        else\r\n            document.exitFullscreen();\r\n        this.setState({\r\n            isFullScreen:!this.state.isFullScreen,\r\n        })       \r\n    }\r\n\r\n    fullSceenClickHandler(event){\r\n        event.preventDefault();\r\n        clicks.push(new Date().getTime());\r\n        window.clearTimeout(timeout);\r\n        timeout = window.setTimeout(()=>{\r\n            if (clicks.length > 1 && clicks[clicks.length - 1] - clicks[clicks.length - 2] < 250){\r\n                this.switchFullScreen();\r\n            }\r\n        },250);\r\n    }   \r\n\r\n    render(){\r\n        var regionSize = 60;\r\n        var home = (\r\n            <div className=\"home-screen\">\r\n                <Scanner region={regionSize} isFullRegion={this.state.isFullRegion}></Scanner>\r\n                {\r\n                    !this.state.isFullRegion&&\r\n                    <ScannerArea region={regionSize}></ScannerArea>\r\n                }\r\n                <div className=\"dynam-info\">\r\n                    <a href=\"https://www.dynamsoft.com\" ><img src=\"../static/img/logo-dynamsoft-blackBg-190x47.png\" alt=\"logo\"></img></a>\r\n                </div>\r\n                <RegionBtn handleRegion={this.handleRegion.bind(this)} isFullRegion={this.state.isFullRegion}></RegionBtn>\r\n            </div>\r\n        );\r\n\r\n        var extra = (\r\n            <>\r\n            <div className=\"settingBtn-container\" >\r\n                <Icon type=\"setting\" style={{fontSize:\"2.5rem\",color:\"#FE8E14\"}} onClick={this.handleShowSettingPage.bind(this)} ></Icon>\r\n            </div>\r\n            <div className=\"double-click\" >\r\n                <label onClick={this.fullSceenClickHandler.bind(this)}>双击{this.state.isFullScreen&&\"退出\"}全屏</label>\r\n            </div>\r\n            <div className=\"selImgBtn-container\">\r\n                <Icon type=\"plus\" style={{fontSize:\"2.5rem\",color:\"#FE8E14\"}} onClick={this.handleShowFilePage.bind(this)}></Icon>\r\n            </div>\r\n            \r\n            <div style={this.state.settingDisplayStyle}>\r\n                <SettingPage onBackClick={this.handleShowSettingPage.bind(this)} ></SettingPage>\r\n            </div>\r\n            {\r\n                this.state.isShowFilePage&&\r\n                <div style={this.state.fileDisplayStyle}>\r\n                    <FilePage onBackClick={this.handleShowFilePage.bind(this)}></FilePage>\r\n                </div>    \r\n            }\r\n            \r\n            </>\r\n        );\r\n        // if(this.state.isShowSettingPage){\r\n        //     return(\r\n        //         <>\r\n        //          {/* {home} */}\r\n        //         <SettingPage\r\n        //         onBackClick={this.handleShowSettingPage.bind(this)}\r\n        //         >\r\n        //         </SettingPage>\r\n        //         </>\r\n        //     )\r\n        // }\r\n\r\n        // if(this.state.isShowFilePage){\r\n        //     return(\r\n        //         <>\r\n        //         {/* {home} */}\r\n        //         <FilePage onBackClick={this.handleShowFilePage.bind(this)}></FilePage>\r\n        //         </>\r\n        //     )\r\n        // }\r\n        \r\n            return(\r\n                <>\r\n                {(this.state.isShowSettingPage)?null:home}\r\n                {/* extra:setting page,setting btn,file page,file btn */}\r\n                {extra}     \r\n\r\n                </>\r\n            )\r\n        \r\n    }\r\n    \r\n}\r\n\r\n\r\n\r\n\r\nclass Layout extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state=({\r\n            isOpen:false,\r\n            isShow:true,\r\n        })\r\n    }\r\n\r\n    handleShow(){\r\n        this.setState({\r\n            isShow:!this.state.isShow,\r\n        });\r\n        console.log(this.state.isShow);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"wrap-container\">\r\n                {\r\n                    this.state.isShow&&\r\n                    <>\r\n                    {/* <Body></Body> */}\r\n                    {/* <Head></Head> */}\r\n                    <Main></Main>\r\n                    </>\r\n                }\r\n            </div>   \r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Layout;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAKA;AACA;AAGA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AADA;AAFA;AAKA;AACA;;;AACA;AACA;AACA;AADA;AAGA;;;AAGA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AAEA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAGA;;;;AAhCA;AACA;AAkCA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AANA;AAFA;AAUA;AACA;;;AACA;AACA;AACA;AADA;AAGA;;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AADA;AAGA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAGA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AASA;;;;AA1IA;AACA;AAgJA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAFA;AAMA;AACA;;;AACA;AACA;AACA;AADA;AAGA;AACA;;;AAEA;AACA;AACA;AAAA;AAWA;;;;AA7BA;AACA;AAgCA;;;;A","sourceRoot":""}