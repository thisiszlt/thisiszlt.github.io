{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.95b85d8b10b42559d199.hot-update.js","sources":["webpack:///./pages/components/FilePage.js"],"sourcesContent":["import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { PageHeader,Upload,Icon,message,List,Typography} from 'antd';\r\nimport '../../static/css/FilePage.css';\r\nimport '../../static/css/Layout.css';\r\nimport {settingsFromPage} from './SettingPage';\r\n\r\n\r\nfunction getBase64(img, callback) {\r\n    const reader = new FileReader();\r\n    reader.addEventListener('load', () => callback(reader.result));\r\n    reader.readAsDataURL(img);\r\n}\r\n  \r\nfunction beforeUpload(file) {\r\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n    if (!isJpgOrPng) {\r\n        message.error('You can only upload JPG/PNG file!');\r\n    }\r\n    const isLt2M = file.size / 1024 / 1024 < 2;\r\n    if (!isLt2M) {\r\n        message.error('Image must smaller than 2MB!');\r\n    }\r\n    return isJpgOrPng && isLt2M;\r\n}\r\n\r\nfunction isLink(possibleLink){\r\n    if (!possibleLink.startsWith('http') && (possibleLink.startsWith('www') || -1 !== possibleLink.indexOf('.com') ||\r\n        -1 !== possibleLink.indexOf('.net') || -1 !== possibleLink.indexOf('.org') || -1 !== possibleLink.indexOf('.edu'))) {\r\n        return true;\r\n    }\r\n    else{\r\n        return false;\r\n    }\r\n}\r\n\r\nvar Dynamsoft;\r\nvar reader;\r\n\r\nclass FilePage extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            showFile:true,\r\n            loading: false,\r\n            resultsInfo:\"\",\r\n            barcodeFormat:settingsFromPage.barcodeformat,\r\n            localization:settingsFromPage.localization,\r\n            deblurLevel:settingsFromPage.deblurlevel,\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        Dynamsoft = window.Dynamsoft;\r\n        Dynamsoft.BarcodeReader.createInstance().then(r=>{\r\n            reader=r;\r\n        })\r\n        console.log(this.state.barcodeFormat);\r\n    }\r\n    \r\n    componentWillUnmount(){\r\n        reader!=undefined&&reader.destroy();\r\n    }\r\n\r\n    handleChange = info => {\r\n        // console.log(info.file.originFileObj);\r\n        if (info.file.status === 'uploading') {\r\n            this.setState({ loading: true ,file:info.file.originFileObj});\r\n            return;\r\n        }\r\n        if (info.file.status === 'done') {\r\n        // Get this url from response in real world.\r\n        getBase64(info.file.originFileObj, imageUrl =>\r\n            this.setState({\r\n            imageUrl,\r\n            loading: false,\r\n            }),\r\n        );\r\n        this.decodeFile(info.file.originFileObj);\r\n        }\r\n    };\r\n\r\n    decodeFile(file){\r\n        var config={};\r\n        message.config({\r\n            top:window.innerHeight/2,\r\n            duration:2,\r\n        });\r\n        \r\n        let settings= reader.getRuntimeSettings();\r\n        settings.barcodeFormat=this.state.barcodeFormat;\r\n        settings.localizationModes=this.state.localization;\r\n        settings.deblurLevel = this.state.deblurLevel;\r\n        console.log(settings);\r\n        let s=reader.getRuntimeSettings();\r\n        s.test=\"sss\";\r\n        console.log(s);\r\n        reader.updateRuntimeSettings(settings).then(()=>{\r\n            console.log(reader.getRuntimeSettings());\r\n            reader.decode(file).then((results)=>{\r\n                if (results.length > 0) {\r\n                    console.log(results);\r\n                    var txts = [];\r\n                    for (var i = 0; i < results.length; ++i) {\r\n                        txts.push(results[i].BarcodeText);\r\n                    }\r\n                    this.setState({\r\n                        resultsInfo:results\r\n                    })\r\n        \r\n                    config.content=\"Found \"+results.length+\" barcode!\";\r\n                    config.icon=<Icon type=\"check\" style={{color:\"#FE8E14\"}}></Icon>;\r\n                    message.open(config);\r\n                }\r\n                else\r\n                {\r\n                    config.content=\"No barcode found!\";\r\n                    config.icon=<Icon type=\"close\" style={{color:\"#FE8E14\"}}></Icon>;\r\n                    message.open(config);\r\n                }\r\n            }).catch(e=>{\r\n                config.content=\"Not supported image file!\"\r\n                config.icon=<Icon type=\"frown\" style={{color:\"#FE8E14\"}}></Icon>;\r\n                message.open(config);\r\n                console.log(e);\r\n            })    \r\n        })\r\n            \r\n        \r\n    }\r\n\r\n    copyScannerResult=e=>{\r\n        const kUtil=window.kUtil;\r\n        kUtil.copyToClipBoard(e.target.innerText);\r\n        //console.log(e.target.innerText);\r\n        var config={};\r\n        config.content=\"copy successfully!\";\r\n        config.icon=<Icon type=\"smile\" style={{color:\"#FE8E14\"}}></Icon>;\r\n        message.config({\r\n            top:window.innerHeight-180,\r\n            duration:1.5,\r\n        });\r\n        message.open(config);\r\n    }\r\n\r\n\r\n    render(){\r\n        const uploadButton = (\r\n            <div className=\"custom-upload-box\">\r\n                <Icon type={this.state.loading ? 'loading' : 'plus'} />\r\n                <div className=\"ant-upload-text\">Upload</div>\r\n            </div>\r\n        );\r\n        const { imageUrl } = this.state;\r\n\r\n        return(\r\n            <>\r\n                \r\n                {/* show the file page */}\r\n                \r\n                <div className=\"file-container\">\r\n                    <PageHeader onBack={this.props.onBackClick} title=\"Files\"  />\r\n                </div>\r\n\r\n                <div className=\"upload-container\">\r\n                    <div className=\"upload\">\r\n                        <Upload\r\n                            name=\"avatar\"\r\n                            listType=\"picture-card\"\r\n                            showUploadList={false}\r\n                            action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                            //beforeUpload={beforeUpload}\r\n                            onChange={this.handleChange}\r\n                            style={{width:180,height:180,display:\"table\"}}\r\n                        >\r\n                            {imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n                        </Upload>    \r\n                    </div>\r\n                </div>\r\n\r\n                {\r\n                    this.state.resultsInfo.length&&\r\n                    <div>\r\n                        <List\r\n                        // header={<div>Scanning Result</div>}\r\n                        className=\"decodefile-result-list\"\r\n                        dataSource = {this.state.resultsInfo}\r\n                        bordered\r\n                        size=\"small\"\r\n                        renderItem={Item=>(\r\n                            <List.Item style={{display:\"list-item\"}}>\r\n                                <Typography.Text>\r\n                                    <span style={{color:\"#FE8E14\"}}>{[Item.BarcodeFormatString]}: </span>\r\n                                </Typography.Text>\r\n                                {isLink(Item.BarcodeText)?\r\n                                <a href={'http://'+Item.BarcodeText} target={\"_blank\"} style={{textDecoration:\"underline\"}} >{Item.BarcodeText}</a>\r\n                                :<span onClick={this.copyScannerResult}>{Item.BarcodeText}</span>  }\r\n                            </List.Item>\r\n                        )}\r\n                        >\r\n                        </List>\r\n                    </div>\r\n                }   \r\n                \r\n            \r\n            </>\r\n            \r\n        )\r\n    }\r\n}\r\nexport default FilePage;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAyBA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AAFA;AADA;AACA;AAKA;AACA;AACA;AACA;AAzCA;AA4FA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAtGA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAFA;AAUA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAoBA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAGA;;;AAiBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AALA;AASA;AAKA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAPA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAPA;AANA;AAyBA;;;;AAzKA;AACA;AA0KA;;;;A","sourceRoot":""}