{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.287adfbaaf15862103b1.hot-update.js","sources":["webpack:///./pages/components/FilePage.js"],"sourcesContent":["import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { PageHeader,Upload,Icon,message} from 'antd';\r\nimport '../../static/css/FilePage.css';\r\nimport '../../static/css/Layout.css';\r\nimport {Result,EachResult} from './Scanner'\r\n\r\nfunction getBase64(img, callback) {\r\n    const reader = new FileReader();\r\n    reader.addEventListener('load', () => callback(reader.result));\r\n    reader.readAsDataURL(img);\r\n}\r\n  \r\nfunction beforeUpload(file) {\r\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n    if (!isJpgOrPng) {\r\n        message.error('You can only upload JPG/PNG file!');\r\n    }\r\n    const isLt2M = file.size / 1024 / 1024 < 2;\r\n    if (!isLt2M) {\r\n        message.error('Image must smaller than 2MB!');\r\n    }\r\n    return isJpgOrPng && isLt2M;\r\n}\r\n\r\n\r\nvar Dynamsoft;\r\nlet scanner = null;\r\n\r\nclass FilePage extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            showFile:true,\r\n            loading: false,\r\n            resultsInfo:\"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        Dynamsoft = window.Dynamsoft;\r\n        \r\n    }\r\n    \r\n\r\n    handleChange = info => {\r\n        // console.log(info.file.originFileObj);\r\n        if (info.file.status === 'uploading') {\r\n            this.setState({ loading: true ,file:info.file.originFileObj});\r\n            return;\r\n        }\r\n        if (info.file.status === 'done') {\r\n        // Get this url from response in real world.\r\n        getBase64(info.file.originFileObj, imageUrl =>\r\n            this.setState({\r\n            imageUrl,\r\n            loading: false,\r\n            }),\r\n        );\r\n        this.decodeFile(info.file.originFileObj);\r\n        }\r\n    };\r\n\r\n    decodeFile(file){\r\n        Dynamsoft.BarcodeReader.createInstance().then(r=>{\r\n            r.decode(file).then((results)=>{\r\n                if (results.length > 0) {\r\n                    console.log(results);\r\n                    var txts = [];\r\n                    for (var i = 0; i < results.length; ++i) {\r\n                        txts.push(results[i].BarcodeText);\r\n                    }\r\n                    this.setState({\r\n                        resultsInfo:results\r\n                    })\r\n                    console.log(txts,typeof txts);\r\n                    alert(txts.join(\"\\n\"));\r\n                    //this.value = '';\r\n                }\r\n                else\r\n\t\t\t\t{\r\n                    alert(\"No barcode found.\");\r\n\t\t\t\t\tthis.value = '';\r\n\t\t\t\t}\r\n            })\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const uploadButton = (\r\n            <div className=\"custom-upload-box\">\r\n                <Icon type={this.state.loading ? 'loading' : 'plus'} />\r\n                <div className=\"ant-upload-text\">Upload</div>\r\n            </div>\r\n        );\r\n        const { imageUrl } = this.state;\r\n        return(\r\n            <>\r\n                \r\n                {/* show the file page */}\r\n                \r\n                <div className=\"file-container\">\r\n                    <PageHeader onBack={this.props.onBackClick} title=\"Files\"  />\r\n                </div>\r\n\r\n                <div className=\"upload-container\">\r\n                <div className=\"upload\">\r\n                    <Upload\r\n                        name=\"avatar\"\r\n                        listType=\"picture-card\"\r\n                        showUploadList={false}\r\n                        action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                        //beforeUpload={beforeUpload}\r\n                        onChange={this.handleChange}\r\n                        style={{width:180,height:180,display:\"table\"}}\r\n                    >\r\n                        {imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n                    </Upload>    \r\n                </div>\r\n                </div>\r\n                <div>\r\n                {\r\n                    this.state.resultsInfo.length&&\r\n                    <Result resultsInfo={this.state.resultsInfo}></Result>\r\n                }   \r\n                </div>\r\n                \r\n                \r\n                <style jsx>\r\n                    {`\r\n                        .file-container{\r\n                            width: 100%;\r\n                            height: 100%;\r\n                            position: absolute;\r\n                            background-color: white;\r\n                        }\r\n                    `}\r\n                </style>\r\n            </>\r\n            \r\n        )\r\n    }\r\n}\r\nexport default FilePage;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAgBA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AAFA;AADA;AACA;AAKA;AACA;AACA;AACA;AA9BA;AACA;AACA;AACA;AAHA;AAFA;AAOA;AACA;;;AACA;AACA;AAEA;;;AAqBA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AALA;AAQA;AAKA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAPA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAGA;AAAA;AA1BA;AAAA;AA4CA;;;;AAhHA;AACA;AAiHA;;;;A","sourceRoot":""}